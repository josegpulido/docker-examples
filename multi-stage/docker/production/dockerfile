# La creación de imágenes mediante un flujo de etapas múltiples
# (multi-stage) permite optimizar el tamaño de la imagen final al
# separar recursos específicos de la imagen total configurada conforme
# las capas del dockerfile se van ejecutando.
# 
# Un ejemplo de lo anterior es una aplicación basada en Java, en donde
# se requerirá del Java Development Kit (JDK) para compilar el código
# fuente. Empaquetar una imagen que contenga el JDK completo que solo
# se usó para la compilación del código tendría efectos importantes en
# el peso final de la imagen. Crear una imagen que antes de empaquetarse
# pueda deshacerse de dichas herramientas instaladas e innecesarias
# contribuiría al mayor rendimiento posible.

# La keyword "as" permite referirse al stage mediante un nombre, el
# cual además estará conformado hasta la próxima sentencia "FROM".
FROM node:latest as prebuild

COPY ["package.json", "package-lock.json", "/usr/src/"]

WORKDIR /usr/src

# Docker recurrirá a la caché en el siguiente stage al detectar la
# capa "RUN npm install --only=production", y luego de eso, se descargarán
# las dependencias de desarrollo que solo se usarán en este stage el
# cual únicamente correrá pruebas.
RUN npm install --only=production
COPY [".", "/usr/src/"]
RUN npm install --only=development

# Corriendo tests
RUN npm run test

# Traspilando código
RUN npm run build

# Hasta esta nueva sentencia "FROM" ya existe un stage llamado "prebuild"
# al que se puede acceder para sustraer archivos, configuraciones, dependencias,
# o cualquier otro recurso de interés en una imagen limpia.
FROM node:latest

COPY ["package.json", "package-lock.json", "/usr/src/"]

WORKDIR /usr/src

RUN npm install --only=production

# Sustrayendo recursos desde el stage "prebuild". En este ejemplo, el beneficio
# es evitar descargar las dependencias de desarrollo, ya que solo se usaron
# para correr las pruebas y quizá para traspilar el código, pero el recurso final
# de interés será el directorio /dist.
COPY --from=prebuild ["/usr/src/dist", "/usr/src/"]

CMD ["npm", "run", "start"]