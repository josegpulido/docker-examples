# Basando la imagen en Node 12
FROM node:12

# ENTRYPOINT VS CMD
# 
# Los contenedores, por defecto, son autoejecutables. Esta característica se especifica a través
# del keyword ("CMD" en dockerfile y "command" en docker-compose), el cual mantendrá encendido al
# contenedor en tanto dicho comando se mantenga ejecutandose.

# P. ej., un contenedor auto ejecutable con el comando "$ ping -c 3 google.com", este se apagará
# luego de hacer 3 pings al dominio "google.com".

# En un contenedor ejecutable (executable container), el contenedor encenderá solamente al especificar
# un comando durante su arranque o con la herramienta "$ docker exec". Suponiendo que aún se desea
# hacer una operación de ping, considerar el sig. ej:
# --> $ docker run -d <image_name> hostname
# o
# --> $ docker exec <container_name> hostname
# Donde $ hostname es un comando de Linux que retorna el nombre del host actual.

# Para lograr hacer que Docker tome el comando y lo vacie como argumento del "comando base", entonces
# el dockerfile requerirá definir este "comando base" junto con un "comando por defecto" para ejecutar en
# caso de que el contenedor ejecutable se arranque sin un valor (mejor dicho, comando) especificado:
ENTRYPOINT [ "ping", "-c", "3" ]

CMD [ "google.com" ]
# En este caso, si no se arranca o ejecuta un comando para el contenedor, este
# ejecutará $ ping -c 3 google.com, y sino:
# 
# $ docker run -d <image_name> hostname --> $ ping -c 3 $(hostname) --> $ ping -c 3 my-cont-hostname-1
# o
# $ docker exec <image_name> facebook.com --> $ ping -c 3 facebook.com